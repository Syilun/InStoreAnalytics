ext {
    isCloud = System.properties['env'] == 'cloud'
}
buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

if(isCloud)
{
	apply plugin: 'war'
	war {
    	webXml = file('WEB-INF/web.xml') // copies a file to WEB-INF/web.xml
    	webInf { from 'WEB-INF' }  
	}
}
else
{
	apply plugin: 'java'
	jar{
		from('WEB-INF') {
      		into ("WEB-INF")
   		} 
   }
}
apply plugin: 'org.springframework.boot'
version = '0.0.1'
sourceCompatibility = 1.8

configurations {
	providedRuntime
}

repositories {
   flatDir {
       dirs 'libs'
   }
}

dependencies {
	compile project(':ServerInterface')
	compile name: 'ngdbc'
	compile('org.slf4j:slf4j-api:1.7.24')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('commons-io:commons-io:2.6')
	compile('commons-fileupload:commons-fileupload:1.3.1')
	//compile('io.swagger:swagger-jaxrs:1.5.16')
	//compile "io.springfox:springfox-swagger2:2.7.0"
	//compile 'io.springfox:springfox-swagger-ui:2.7.0'
	compile group: 'io.swagger', name: 'swagger-jersey2-jaxrs', version: '1.5.16'
	//compile('mysql:mysql-connector-java')
	compile('com.microsoft.sqlserver:mssql-jdbc:6.3.1.jre8-preview')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	providedRuntime('ch.qos.logback:logback-classic:1.1.11')
	if(isCloud)
	{
		providedCompile name:'neo-sdk-core-api-2.87.13'
	}
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

